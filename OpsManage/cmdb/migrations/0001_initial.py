# Generated by Django 2.1.1 on 2018-10-22 02:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(choices=[('1', '服务器'), ('2', '网络设备'), ('3', '安全设备'), ('4', '存储设备'), ('5', '其他')], default='server', max_length=64, verbose_name='资产类型')),
                ('asset_name', models.CharField(max_length=64, unique=True, verbose_name='资产名称')),
                ('asset_no', models.CharField(max_length=50, unique=True, verbose_name='资产编号')),
                ('network_location', models.CharField(choices=[('1', '控制专网'), ('2', '业务内网'), ('3', '业务外网')], max_length=64, verbose_name='所属网络')),
                ('status', models.CharField(choices=[('1', '使用中'), ('2', '未使用'), ('3', '故障'), ('4', '其它')], max_length=50, verbose_name='设备状态')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='产品序列号')),
                ('manage_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP')),
                ('purchase_day', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('expire_day', models.DateField(blank=True, null=True, verbose_name='过保日期')),
                ('c_time', models.DateField(blank=True, null=True, verbose_name='批准日期')),
                ('m_time', models.DateField(auto_now=True, verbose_name='更新日期')),
                ('memo', models.CharField(blank=True, max_length=400, null=True, verbose_name='备注')),
                ('height', models.SmallIntegerField(blank=True, null=True, verbose_name='高度')),
                ('cab_location', models.SmallIntegerField(blank=True, null=True, verbose_name='机柜位置')),
                ('qrcode', models.URLField(blank=True, null=True, verbose_name='二维码')),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin', to=settings.AUTH_USER_MODEL, verbose_name='管理员')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='审批人')),
            ],
            options={
                'verbose_name': '资产总表',
                'verbose_name_plural': '资产总表',
                'db_table': 'cmdb_asset',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabinet_name', models.CharField(max_length=100, verbose_name='机柜名称')),
                ('cabinet_desc', models.CharField(blank=True, max_length=100, verbose_name='机柜描述')),
                ('cabinet_height', models.SmallIntegerField(blank=True, null=True, verbose_name='机柜高度')),
            ],
            options={
                'verbose_name': '机柜',
                'verbose_name_plural': '机柜',
                'db_table': 'cmdb_cabinet',
            },
        ),
        migrations.CreateModel(
            name='CabinetSpace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabinet_location', models.CharField(blank=True, choices=[('1', '1U'), ('2', '2U'), ('3', '3U'), ('4', '4U'), ('5', '5U'), ('6', '6U'), ('7', '7U'), ('8', '8U'), ('9', '9U'), ('10', '10U'), ('11', '11U'), ('12', '12U'), ('13', '13U'), ('14', '14U'), ('15', '15U'), ('16', '16U'), ('17', '17U'), ('18', '18U'), ('19', '19U'), ('20', '20U'), ('21', '21U'), ('22', '22U'), ('23', '23U'), ('24', '24U'), ('25', '25U'), ('26', '26U'), ('27', '27U'), ('28', '28U'), ('29', '29U'), ('30', '30U'), ('31', '31U'), ('32', '32U'), ('33', '33U'), ('34', '34U'), ('35', '35U'), ('36', '36U'), ('37', '37U'), ('38', '38U'), ('39', '39U'), ('40', '40U'), ('41', '41U'), ('42', '42U')], max_length=64, verbose_name='机柜位置')),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Asset', verbose_name='机柜空间')),
                ('cabinet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.Cabinet', verbose_name='所在机柜')),
            ],
            options={
                'verbose_name': '机柜位置',
                'verbose_name_plural': '机柜位置',
                'db_table': 'cmdb_cabinetspace',
                'ordering': ['cabinet', 'cabinet_location'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(max_length=128, unique=True, verbose_name='合同编号')),
                ('contract_name', models.CharField(max_length=64, unique=True, verbose_name='合同名称')),
                ('contract_content', models.TextField(blank=True, null=True, verbose_name='合同内容')),
                ('contract_memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '合同',
                'verbose_name_plural': '合同',
                'db_table': 'cmdb_contract',
            },
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='CPU型号')),
                ('cpu_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='CPU生产商')),
                ('cpu_speed', models.CharField(blank=True, max_length=100, null=True, verbose_name='CPU容量')),
                ('cpu_core_count', models.SmallIntegerField(blank=True, null=True, verbose_name='CPU核数')),
                ('cpu_slot', models.CharField(blank=True, max_length=100, null=True, verbose_name='CPU插槽')),
                ('cpu_status', models.CharField(blank=True, choices=[('1', '正常'), ('2', '故障'), ('3', '下线')], max_length=100, null=True, verbose_name='CPU状态')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('update_date', models.DateTimeField(auto_now_add=True, verbose_name='更新时间')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset', verbose_name='资产')),
            ],
            options={
                'verbose_name': 'CPU',
                'verbose_name_plural': 'CPU',
                'db_table': 'cmdb_cpu',
                'ordering': ['asset', 'cpu_slot'],
            },
        ),
        migrations.CreateModel(
            name='Device_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='upload', verbose_name='图片展示')),
                ('models', models.CharField(max_length=64, verbose_name='设备型号')),
            ],
            options={
                'verbose_name': '设备型号',
                'verbose_name_plural': '设备型号',
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disk_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='硬盘名称')),
                ('disk_volume', models.CharField(blank=True, max_length=64, null=True, verbose_name='硬盘容量')),
                ('disk_model', models.CharField(blank=True, max_length=64, null=True, verbose_name='硬盘型号')),
                ('disk_brand', models.CharField(blank=True, max_length=32, null=True, verbose_name='硬盘生产商')),
                ('disk_serial', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘序列号')),
                ('disk_slot', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘插槽')),
                ('disk_status', models.CharField(blank=True, choices=[('1', '正常'), ('2', '故障'), ('3', '下线')], max_length=100, null=True, verbose_name='硬盘状态')),
                ('disk_attr', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘属性')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset', verbose_name='资产')),
            ],
            options={
                'verbose_name': '磁盘',
                'verbose_name_plural': '磁盘',
                'db_table': 'cmdb_disk',
                'ordering': ['asset', 'disk_slot'],
            },
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='事件名称')),
                ('event_type', models.CharField(choices=[('1', '硬件变更'), ('2', '新增配件'), ('3', '设备下线'), ('4', '设备上线'), ('5', '定期维护'), ('6', '业务上线'), ('7', '其它')], default=4, max_length=64, verbose_name='事件类型')),
                ('component', models.CharField(blank=True, max_length=256, null=True, verbose_name='事件子项')),
                ('detail', models.TextField(verbose_name='事件详情')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='事件时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Asset')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '事件纪录',
                'verbose_name_plural': '事件纪录',
            },
        ),
        migrations.CreateModel(
            name='Idc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idc_name', models.CharField(max_length=255, verbose_name='机房名称')),
                ('idc_address', models.CharField(blank=True, max_length=100, verbose_name='机房地址')),
                ('idc_memo', models.TextField(blank=True, max_length=200, verbose_name='备注信息')),
            ],
            options={
                'verbose_name': '机房',
                'verbose_name_plural': '机房',
                'db_table': 'cmdb_idc',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.CharField(choices=[('1', '路由器'), ('2', '交换机'), ('3', '工业交换机'), ('4', '无线控制器'), ('5', '无线AP')], max_length=64, verbose_name='网络设备类型')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset', verbose_name='资产')),
            ],
            options={
                'verbose_name': '网络设备',
                'verbose_name_plural': '网络设备',
                'db_table': 'cmdb_networkdevice',
                'ordering': ['sub_asset_type'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_name', models.CharField(max_length=64, unique=True, verbose_name='单位名称')),
                ('org_address', models.CharField(blank=True, max_length=64, null=True, verbose_name='单位地址')),
                ('org_memo', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('parent_org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_level', to='cmdb.Organization', verbose_name='上级单位')),
            ],
            options={
                'verbose_name': '所属单位',
                'verbose_name_plural': '所属单位',
                'db_table': 'cmdb_organization',
            },
        ),
        migrations.CreateModel(
            name='Parts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parts_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='部件类型')),
                ('parts_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='部件名称')),
                ('parts_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='部件型号')),
                ('parts_sn', models.CharField(blank=True, max_length=100, null=True, verbose_name='部件序列号')),
                ('parts_slot', models.CharField(blank=True, max_length=64, null=True, verbose_name='硬盘插槽')),
                ('parts_status', models.CharField(blank=True, choices=[('1', '正常'), ('2', '故障'), ('3', '下线')], max_length=100, null=True, verbose_name='部件状态')),
                ('memo', models.TextField(blank=True, max_length=1000, null=True, verbose_name='部件描述')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset', verbose_name='资产')),
            ],
            options={
                'verbose_name': '部件',
                'verbose_name_plural': '部件',
                'db_table': 'cmdb_parts',
                'ordering': ['asset', 'parts_slot'],
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_type', models.CharField(blank=True, choices=[('1', 'Ethernet'), ('2', 'GigabitEthernet'), ('3', 'TenGigabitEthernet'), ('4', 'Pos'), ('5', 'Serial'), ('6', 'vlan'), ('7', 'Tunnel')], max_length=100, null=True, verbose_name='接口类型')),
                ('port_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='接口名称')),
                ('port_slot', models.CharField(blank=True, max_length=32, null=True, verbose_name='网卡槽位')),
                ('vlan', models.CharField(blank=True, max_length=32, null=True, verbose_name='接口vlan')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='接口地址')),
                ('sub_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='接口副地址')),
                ('mask', models.SmallIntegerField(blank=True, null=True, verbose_name='子网掩码')),
                ('bandwidth', models.CharField(max_length=30, null=True, verbose_name='接口带宽')),
                ('status', models.CharField(blank=True, choices=[('1', 'UP'), ('2', 'DOWN'), ('3', 'AdminDown')], max_length=100, null=True, verbose_name='接口状态')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset', verbose_name='资产')),
            ],
            options={
                'verbose_name': '接口',
                'verbose_name_plural': '接口',
                'db_table': 'cmdb_port',
                'ordering': ['asset', 'port_slot'],
            },
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ram_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存型号')),
                ('ram_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存品牌')),
                ('ram_volume', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存容量')),
                ('ram_slot', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存插槽')),
                ('ram_status', models.CharField(blank=True, choices=[('1', '正常'), ('2', '故障'), ('3', '下线')], max_length=100, null=True, verbose_name='内存状态')),
                ('create_date', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('update_date', models.DateTimeField(auto_now_add=True, verbose_name='更新时间')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset', verbose_name='资产')),
            ],
            options={
                'verbose_name': '内存',
                'verbose_name_plural': '内存',
                'db_table': 'cmdb_ram',
                'ordering': ['asset', 'ram_slot'],
            },
        ),
        migrations.CreateModel(
            name='SecurityDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.CharField(choices=[('1', '防火墙'), ('2', '入侵检测设备'), ('3', '入侵防御设备'), ('4', '综合安全网关'), ('5', '数据库审计系统'), ('6', '运维审计系统'), ('7', '防病毒网关'), ('8', 'WAF防火墙'), ('9', '安全配置核查'), ('10', '网络准入系统'), ('11', '网闸设备'), ('12', 'VPN设备')], max_length=64, verbose_name='安全设备类型')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset', verbose_name='资产')),
            ],
            options={
                'verbose_name': '安全设备',
                'verbose_name_plural': '安全设备',
                'db_table': 'cmdb_securitydevice',
                'ordering': ['sub_asset_type'],
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.CharField(choices=[('1', 'PC服务器'), ('2', '小型机'), ('3', '刀片机'), ('4', '虚拟机'), ('5', '容器')], max_length=64, verbose_name='服务器类型')),
                ('created_by', models.CharField(choices=[('1', '自动添加'), ('2', '手工录入')], max_length=32, verbose_name='添加方式')),
                ('microcode', models.CharField(blank=True, max_length=32, null=True, verbose_name='微码版本')),
                ('os_type', models.CharField(blank=True, choices=[('1', 'Windows'), ('2', 'Unix'), ('3', 'Linux'), ('4', 'Other')], max_length=64, null=True, verbose_name='操作系统类型')),
                ('os_distribution', models.CharField(blank=True, max_length=64, null=True, verbose_name='发行版本')),
                ('os_release', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统版本')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset', verbose_name='资产')),
                ('hosted_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hosted_on_server', to='cmdb.Server', verbose_name='宿主机')),
            ],
            options={
                'verbose_name': '服务器',
                'verbose_name_plural': '服务器',
                'db_table': 'cmdb_server',
                'ordering': ['sub_asset_type', 'asset'],
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.CharField(choices=[('1', '操作系统'), ('2', '数据库'), ('3', '中间件')], default=0, max_length=64, verbose_name='软件类型')),
                ('license_num', models.IntegerField(default=1, verbose_name='授权数量')),
                ('version', models.CharField(help_text='例如: CentOS release 6.7 (Final)', max_length=64, unique=True, verbose_name='软件/系统版本')),
            ],
            options={
                'verbose_name': '软件/系统',
                'verbose_name_plural': '软件/系统',
                'db_table': 'cmdb_software',
            },
        ),
        migrations.CreateModel(
            name='StorageDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.CharField(choices=[('1', '磁盘阵列'), ('2', '网络存储器'), ('3', '光纤交换机'), ('4', '磁带库'), ('5', '磁带机')], max_length=64, verbose_name='存储设备类型')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Asset', verbose_name='资产')),
            ],
            options={
                'verbose_name': '存储设备',
                'verbose_name_plural': '存储设备',
                'db_table': 'cmdb_storagedevice',
                'ordering': ['sub_asset_type'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_name', models.CharField(max_length=64, unique=True, verbose_name='供应商名称')),
                ('supplier_contacts', models.CharField(max_length=64, verbose_name='供应商联系人')),
                ('supplier_phone', models.CharField(max_length=64, verbose_name='供应商电话')),
                ('supplier_memo', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '供应商',
                'verbose_name_plural': '供应商',
                'db_table': 'cmdb_supplier',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=64, unique=True, verbose_name='厂商名称')),
                ('vendor_phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='支持电话')),
                ('vendor_memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '生产厂商',
                'verbose_name_plural': '生产厂商',
                'db_table': 'cmdb_vendor',
            },
        ),
        migrations.AddField(
            model_name='idc',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Organization', verbose_name='所属单位'),
        ),
        migrations.AddField(
            model_name='device_model',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.Vendor', verbose_name='设备厂商'),
        ),
        migrations.AddField(
            model_name='cabinet',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cmdb.Idc', verbose_name='所在机房'),
        ),
        migrations.AddField(
            model_name='asset',
            name='cabinet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Cabinet', verbose_name='机柜'),
        ),
        migrations.AddField(
            model_name='asset',
            name='contract',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Contract', verbose_name='来源合同'),
        ),
        migrations.AddField(
            model_name='asset',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Idc', verbose_name='机房'),
        ),
        migrations.AddField(
            model_name='asset',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Device_model', verbose_name='设备型号'),
        ),
        migrations.AddField(
            model_name='asset',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Organization', verbose_name='组织机构'),
        ),
        migrations.AddField(
            model_name='asset',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.Supplier', verbose_name='供应厂商'),
        ),
        migrations.AlterUniqueTogether(
            name='ram',
            unique_together={('asset', 'ram_slot')},
        ),
        migrations.AlterUniqueTogether(
            name='port',
            unique_together={('asset', 'port_name'), ('asset', 'ip', 'sub_ip')},
        ),
        migrations.AlterUniqueTogether(
            name='parts',
            unique_together={('asset', 'parts_slot'), ('asset', 'parts_sn')},
        ),
        migrations.AlterUniqueTogether(
            name='disk',
            unique_together={('asset', 'disk_slot')},
        ),
        migrations.AlterUniqueTogether(
            name='device_model',
            unique_together={('vendor', 'models', 'img')},
        ),
        migrations.AlterUniqueTogether(
            name='cpu',
            unique_together={('asset', 'cpu_slot')},
        ),
        migrations.AlterUniqueTogether(
            name='cabinetspace',
            unique_together={('cabinet', 'cabinet_location')},
        ),
    ]
